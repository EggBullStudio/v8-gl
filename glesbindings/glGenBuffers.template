// glGenBuffers uses an output parameter to return an array of ints.
Handle<Value> GLESglGenBuffersCallback(const Arguments& args) {
  HandleScope handle_scope;
  GLsizei num_buffers = args[0]->Int32Value();

  GLuint* buffers = new GLuint[num_buffers];
  glGenBuffers(num_buffers, buffers);

  // TODO(deanm): There should be a way to initialize the array faster.
  v8::Local<v8::Array> res = v8::Array::New(num_buffers);
  for (int i = 0; i < num_buffers; ++i) {
    res->Set(v8::Integer::New(i), v8::Integer::New(buffers[i]));
  }

  delete[] buffers;

  return handle_scope.Close(res);
}
